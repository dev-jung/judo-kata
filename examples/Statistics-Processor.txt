' Copyright (c) 2019, Martin Jung.
' All rights reserved. This program and the accompanying materials
' are made available under the terms of the Apache License Version 2.0, January 2004
' which accompanies this distribution, and is available at
' http://www.apache.org/licenses/

' This is the statistics processor module. It operates on the data imported by the "ResultCollector"

' Declarations
Dim databaseSheet As Worksheet ' Worksheet that contains the imported values
Dim resultSheet As Worksheet ' Worksheet that contains the final judge rating database
Dim configSheet As Worksheet 'Worksheet that contains the configuration parameters and I18N/L10 Data


Sub Process()
  Set databaseSheet = ThisWorkbook.Sheets("Database")
  Set resultSheet = ThisWorkbook.Sheets("Übersicht")
  Set configSheet = ThisWorkbook.Sheets("Configuration")

  ' kill former results
  killJudgeSheets
  ' determine all available kata and store in an array
  Dim kataNames() As String
  Dim judgeNames() As String
  Dim kata As Variant, judge As Variant ' has to be Variant due to for/each
  kataNames = getUniqueKata()
  ' for each kata
  For Each kata In kataNames
    ' determine the six judges
    Dim kataName As String, judgeName As String
    kataName = kata ' hack to avoid ByRef Error for type variant
    judgeNames = fetchJudgesForKata(kataName)
    ' for each judge
    For Each judge In judgeNames
      judgeName = judge ' hack to avoid ByRef Error for type variant
      ' create or select sheet for judge and kata
      createAndFillJudgeSheet kataName, judgeName
    Next judge
   Next kata
   ThisWorkbook.Sheets(1).Activate
   generateSummary ' transfers judge values to summary sheet
   
End Sub

Sub generateSummary()
  ' clear area
  resultSheet.Range("A3:D10000").Clear
  Dim currentJudgeSheet As Worksheet
  For i = 2 To ThisWorkbook.Sheets.Count
    Set currentJudgeSheet = ThisWorkbook.Sheets(i)
    If InStr(currentJudgeSheet.Name, "__") Then ' this is a judge sheet
      Dim kataName As String, judgeName As String
      Dim judgeRow As Integer, kataColumn As Integer
      Dim judgeCell As Range
      ' determine the kata and judge names
      kataName = Left(currentJudgeSheet.Name, InStr(currentJudgeSheet.Name, "-") - 1)
      judgeName = Right(currentJudgeSheet.Name, Len(currentJudgeSheet.Name) - Len(kataName) - 1)
      judgeName = Left(judgeName, Len(judgeName) - 2)
      ' get Kata Column Index
      kataColumn = resultSheet.Range("B1:Z1").Find(kataName).Column
      
      judgeRow = resultSheet.Cells(Rows.Count, "A").End(xlUp).Row + 1 ' initialize judgeRow to the first empty row -> if we dont find the judge, we take this new row
      Set judgeCell = resultSheet.Range("A2:A302").Find(judgeName) ' look for the judge
      If Not judgeCell Is Nothing Then ' judge is present, set the row
        judgeRow = judgeCell.Row
      End If
      resultSheet.Cells(judgeRow, 1).Value = currentJudgeSheet.Cells(1, 1).Value
      resultSheet.Cells(judgeRow, kataColumn).Value = currentJudgeSheet.Cells(1, 6).Value
    End If
  Next i
  ' format
  Dim resultCell As Range, resultRange As Range
  Set resultRange = resultSheet.Range("B2:K302")
  For Each resultCell In resultRange
    resultCell.Font.Bold = True
    resultCell.HorizontalAlignment = xlCenter
    Select Case resultCell.Value
     Case Is = "A"
      resultCell.Interior.Color = RGB(0, 255, 0)
     Case Is = "B"
      resultCell.Interior.Color = RGB(255, 255, 0)
     Case Is = "C"
      resultCell.Interior.Color = RGB(255, 0, 0)
    End Select
    
  Next resultCell
End Sub

'Sub function that creates a sheet per judge and per kata.
Sub createAndFillJudgeSheet(kataName As String, judgeName As String)
  Dim sheetName As String
  sheetName = kataName & "-" & judgeName & "__"
  Dim judgeSheet As Worksheet
  On Error Resume Next
  If (ThisWorkbook.Sheets(sheetName).Name = "") Then
    Debug.Print "Worksheet doesn't exist!"
    Worksheets.Add(After:=ThisWorkbook.Sheets(Sheets.Count)).Name = sheetName
  End If
  
  Set judgeSheet = ThisWorkbook.Sheets(sheetName)
  Dim judgeSheetRowIndex As Integer ' index of next empty row in judge sheet
  ' Fill static content
  judgeSheet.Cells(1, 1).Value = judgeName
  judgeSheet.Cells(1, 2).Value = kataName
  judgeSheet.Cells(1, 4).Value = "Overall Rate:"
  judgeSheet.Cells(1, 5).FormulaLocal = "=MITTELWERT(E3:E1000)"
  judgeSheet.Cells(1, 5).NumberFormat = "0.00%"
  
  judgeSheet.Cells(2, 1).Value = "Paar"
  judgeSheet.Cells(2, 2).Value = "Paarname"
  judgeSheet.Cells(2, 3).Value = "LV"
  judgeSheet.Cells(2, 4).Value = "Gesamtpunkte"
  judgeSheet.Cells(2, 5).Value = "Prozent"
  judgeSheet.Cells(2, 5).HorizontalAlignment = xlRight
  judgeSheet.Cells(2, 6).Value = "Einzelwertungen und Fehler"
  judgeSheetRowIndex = 3 ' next empty row in judge sheet is 3
  
  ' Transfer data
  Dim lastRowIndex As Integer ' will contain the index of the last filled row in the database
  lastRowIndex = databaseSheet.Cells(Rows.Count, "B").End(xlUp).Row
  
  For i = 2 To lastRowIndex ' iterate all rows, and - escape when wrong kata, summary line, supervisor, or wrong judge
    If databaseSheet.Cells(i, 2).Value <> kataName Then
     GoTo NextIteration ' wrong kata
    End If
    If databaseSheet.Cells(i, 8).Value = "" Then
     GoTo NextIteration ' summary line
    End If
    If databaseSheet.Cells(i, 9).Value = True Then
     GoTo NextIteration ' supervisor line
    End If
    If InStr(databaseSheet.Cells(i, 6).Value, judgeName) = 0 Then
     GoTo NextIteration ' wrong judge
    End If
    judgeSheet.Cells(judgeSheetRowIndex, 1).Value = databaseSheet.Cells(i, 3) ' pair number
    judgeSheet.Cells(judgeSheetRowIndex, 2).Value = databaseSheet.Cells(i, 1) ' pair name
    judgeSheet.Cells(judgeSheetRowIndex, 3).Value = databaseSheet.Cells(i, 4) ' pair affiliation
    judgeSheet.Cells(judgeSheetRowIndex, 4).Value = databaseSheet.Cells(i, 11) ' judge score
    judgeSheet.Cells(judgeSheetRowIndex, 4).NumberFormat = "#.0#"
    judgeSheet.Cells(judgeSheetRowIndex, 5).Value = databaseSheet.Cells(i, 12) ' percent
    judgeSheet.Cells(judgeSheetRowIndex, 5).NumberFormat = "0.00%"
    ' insert additional information like individual technique scores
  
    judgeSheetRowIndex = judgeSheetRowIndex + 1
NextIteration:
  Next i
  
  ' Format always start with "Red", then conditionally go to yellow, then green
  judgeSheet.Cells(1, 5).Interior.Color = RGB(255, 0, 0)
  judgeSheet.Cells(1, 6).Interior.Color = RGB(255, 0, 0)
  judgeSheet.Cells(1, 6).Value = "C"
  If judgeSheet.Cells(1, 5).Value >= configSheet.Cells(50, 2).Value Then
    judgeSheet.Cells(1, 5).Interior.Color = RGB(255, 255, 0)
    judgeSheet.Cells(1, 6).Interior.Color = RGB(255, 255, 0)
    judgeSheet.Cells(1, 6).Value = "B"
  End If
  If judgeSheet.Cells(1, 5).Value >= configSheet.Cells(49, 2).Value Then
    judgeSheet.Cells(1, 5).Interior.Color = RGB(0, 255, 0)
    judgeSheet.Cells(1, 6).Interior.Color = RGB(0, 255, 0)
    judgeSheet.Cells(1, 6).Value = "A"
  End If
 
End Sub

Sub killJudgeSheets() ' Helper function. Deletes all generated judge sheets
  For i = ThisWorkbook.Sheets.Count To 1 Step -1
    If InStr(ThisWorkbook.Sheets(i).Name, "__") > 0 Then
      Application.DisplayAlerts = False
      ThisWorkbook.Sheets(i).Delete
      Application.DisplayAlerts = True
    End If
  Next i
  ThisWorkbook.Sheets(1).Range("A2:D10000").Clear ' also clear summary
End Sub

Function fetchJudgesForKata(kataName As String) As String() ' Helper function. Determines all judges that were evaluating a given kata and returns the names as an Array
  Dim dict As Scripting.Dictionary ' Use a dictionary to map to unique values
  Set dict = New Scripting.Dictionary
  
  Dim lastRowIndex As Integer ' will contain the index of the last filled row in the database
  lastRowIndex = databaseSheet.Cells(Rows.Count, "B").End(xlUp).Row
  
  For i = 2 To lastRowIndex ' iterate all rows, and - escape when wrong kata, summary line, or supervisor
    If databaseSheet.Cells(i, 2).Value <> kataName Then
     GoTo NextIteration ' wrong kata
    End If
    If databaseSheet.Cells(i, 8).Value = "" Then
     GoTo NextIteration ' summary line
    End If
    If databaseSheet.Cells(i, 9).Value = True Then
     GoTo NextIteration ' wrong supervisor
    End If
    Dim judgeDesignator As String, judgeName As String
    judgeDesignator = databaseSheet.Cells(i, 6)
    openBracketIndex = InStr(judgeDesignator, "(") - 1
    judgeName = Left(judgeDesignator, openBracketIndex)
    dict(judgeName) = True
NextIteration:
  Next i
  
  ReDim judgeNames(dict.Count - 1) As String ' create an array of correct size

    For i = 0 To dict.Count - 1
        judgeNames(i) = dict.Keys(i) ' transfer the judge names
    Next i
    fetchJudgesForKata = judgeNames

End Function

Function getUniqueKata() As String() ' helper function. Determines all Kata names that were part of the tournament and returns them as an array
    Dim dict As Scripting.Dictionary ' Use a dictionary to map to unique values

    Set dict = New Scripting.Dictionary
    Dim kata As String  ' temporary storage of the kata name
    For Each kataentry In databaseSheet.Range("B2:B100000") ' take all the B column - without the header
        kata = Trim(kataentry.Value)
        If Len(kata) > 0 Then dict(kata) = dict(kata) + 1 ' actually, this counts the entries for a kata which is not necessary.
    Next kataentry
  
  ReDim kataNames(dict.Count - 1) As String ' create an array of correct size

    For i = 0 To dict.Count - 1
        kataNames(i) = dict.Keys(i) ' transfer the kata names
    Next i
    getUniqueKata = kataNames
End Function
