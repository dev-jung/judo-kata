' This is the main generator routine
' (c) by Martin Jung in 2017

' Declarations
Dim fso As New FileSystemObject ' file system access
' this generates Files for all Kata
Sub generateAllKata()
  For sheetIndex = 1 To ThisWorkbook.Sheets.Count - 1
    generate (ThisWorkbook.Sheets(sheetIndex).Name)
  Next sheetIndex
End Sub
'this generates Files for the currently active Kata
Sub generateSingleKata()
 generate (ThisWorkbook.ActiveSheet.Name)
End Sub
' This creates the directory structure, loads the Template file, and starts the run for the given kata name
Sub generate(kataSheetName As String)
  Dim templateFile As String ' Full path to the template file
  Dim targetPath As String ' copy source and target
  Dim parameters As Range ' all configuration parameters
  
  ' Config Parameters: Assumtion: We wont have more than 200 parameters
  Set parameters = Sheets(ThisWorkbook.Sheets.Count).Range("A3:B203")

  ' File System Init
  templateFile = ThisWorkbook.path & "\" & "Blank.xlsm"  ' Blank.xlsm is the template file
  targetPath = ThisWorkbook.path & "\" & Replace(parameters(1, 2), " ", "") ' The target directory for the generated files
  ' transfer parameters to result sheet
  transferConfiguration parameters, ThisWorkbook.path & "\" & "Results.xlsm" ' Results.xlsm is the result file
  ' Create File System Structure
  If Not FolderExists(targetPath) Then
    FolderCreate targetPath
  End If
  If Not FolderExists(targetPath & "\" & kataSheetName) Then
    FolderCreate targetPath & "\" & kataSheetName
  End If
  createPairFiles kataSheetName, templateFile, targetPath, Sheets(kataSheetName), parameters
End Sub
'this loops over all registered pairs and creates a file for each pair
Sub createPairFiles(kataSheetName As String, templateFile As String, targetPath As String, listSheet As Worksheet, parameters As Range)
  Set fso = VBA.CreateObject("Scripting.FileSystemObject")
  
  Dim startingPosition As String, pairAffiliation As String
  Dim judgePosition As String, judgeName As String, judgeGiven As String, judgeAffiliation As String
  Dim toriName As String, ukeName As String
  
  Dim startNumber As Integer
  startNumber = 1
  For pairRow = 5 To listSheet.Cells(listSheet.Rows.Count, 1).End(xlUp).row ' Pair Rows start at row 5, valid rows are filled in column 1
    startingPosition = listSheet.Cells(pairRow, 1)
    pairAffiliation = listSheet.Cells(pairRow, 8)
    toriName = listSheet.Cells(pairRow, 2)
    ukeName = listSheet.Cells(pairRow, 5)
    Dim pairFile As Workbook
    Set pairFile = createFileForKata(templateFile, targetPath, kataSheetName, startingPosition, toriName, ukeName)
    
    'Fill in I18/L10 Values
    pairFile.Sheets(1).Name = parameters(37, 2) ' Name of the Evaluation Sheet
    pairFile.Sheets(2).Name = parameters(38, 2) ' Name of the Evaluation Summary Sheet
    pairFile.Sheets(1).Cells(5, 1) = parameters(5, 2) & ":" ' Judge Title
    pairFile.Sheets(1).Cells(5, 7) = parameters(3, 2) & ":" ' Date Title
    pairFile.Sheets(1).Cells(5, 10) = parameters(20, 2) & ":" ' Start Position Short
    pairFile.Sheets(1).Cells(7, 4) = parameters(17, 2) ' Name Title
    pairFile.Sheets(1).Cells(7, 6) = parameters(18, 2) ' Given Name Title
    pairFile.Sheets(1).Cells(7, 9) = parameters(21, 2) ' Club Title
    pairFile.Sheets(1).Cells(7, 11) = parameters(22, 2) ' Affiliation Title
    pairFile.Sheets(1).Cells(12, 1) = parameters(23, 2) ' Technique Title
    pairFile.Sheets(1).Cells(11, 6) = parameters(24, 2) ' Small Mistake Title
    pairFile.Sheets(1).Cells(11, 8) = parameters(25, 2) ' Medium Mistake Title
    pairFile.Sheets(1).Cells(11, 9) = parameters(26, 2) ' Big Mistake Title
    pairFile.Sheets(1).Cells(11, 10) = parameters(27, 2) ' Omitted Technique Title
    pairFile.Sheets(1).Cells(11, 11) = parameters(28, 2) ' Score Title
    pairFile.Sheets(1).Cells(13, 4) = parameters(35, 2) ' Opening
    pairFile.Sheets(1).Cells(29, 4) = parameters(36, 2) ' Closing
    pairFile.Sheets(1).Cells(36, 1) = parameters(29, 2) ' SumScore
    pairFile.Sheets(1).Cells(37, 1) = parameters(16, 2) & ":" ' Judge Position Title
    pairFile.Sheets(1).Cells(37, 6) = parameters(30, 2) ' Transcript checked
    
    pairFile.Sheets(2).Cells(1, 1) = parameters(31, 2) & ":" ' Pair Title
    pairFile.Sheets(2).Cells(2, 1) = parameters(16, 2) & ":" ' Judge Position Title
    pairFile.Sheets(2).Cells(2, 2) = parameters(17, 2) ' Name Title
    pairFile.Sheets(2).Cells(2, 3) = parameters(35, 2) ' Opening
    pairFile.Sheets(2).Cells(2, 25) = parameters(36, 2) ' Closing
    pairFile.Sheets(2).Cells(2, 26) = parameters(28, 2) ' Score Title
    pairFile.Sheets(2).Cells(2, 27) = parameters(45, 2) ' Score Title
    pairFile.Sheets(2).Cells(2, 28) = parameters(24, 2) ' Small Mistake
    pairFile.Sheets(2).Cells(2, 29) = parameters(25, 2) ' Medium Mistake
    pairFile.Sheets(2).Cells(2, 30) = parameters(26, 2) ' Big Mistake
    pairFile.Sheets(2).Cells(2, 31) = parameters(27, 2) ' Ommitted Technique
    pairFile.Sheets(2).Cells(3, 1) = parameters(28, 2) & ":" ' Overall Score Title
    pairFile.Sheets(2).Cells(4, 1) = parameters(34, 2) & ":" ' Span
    pairFile.Sheets(2).Cells(5, 1) = parameters(32, 2) & ":" ' Average
    pairFile.Sheets(2).Cells(6, 1) = parameters(33, 2) & ":" ' Deviation
    
    'fill out competition and pair data
    pairFile.Sheets(1).Cells(1, 5) = parameters(1, 2) ' Competition Name
    pairFile.Sheets(1).Cells(2, 1) = parameters(2, 2) ' Competition Type
    pairFile.Sheets(1).Cells(5, 8) = parameters(4, 2) ' Competition Date
    pairFile.Sheets(1).Cells(5, 11) = Format(startingPosition, "00")
    pairFile.Sheets(1).Cells(8, 4) = listSheet.Cells(pairRow, 2)
    pairFile.Sheets(1).Cells(8, 6) = listSheet.Cells(pairRow, 3)
    pairFile.Sheets(1).Cells(8, 9) = listSheet.Cells(pairRow, 4)
    pairFile.Sheets(1).Cells(9, 4) = listSheet.Cells(pairRow, 5)
    pairFile.Sheets(1).Cells(9, 6) = listSheet.Cells(pairRow, 6)
    pairFile.Sheets(1).Cells(9, 9) = listSheet.Cells(pairRow, 7)
    pairFile.Sheets(1).Cells(8, 11) = pairAffiliation
    pairFile.Sheets(1).Cells(9, 11) = pairAffiliation
    
    ' protect dynamic cells from overflow
    pairFile.Sheets(1).Cells(1, 5).ShrinkToFit = True ' Competition Name
    pairFile.Sheets(1).Range("D8:I9").ShrinkToFit = True ' Uki and Tori Name
    pairFile.Sheets(1).Cells(5, 8).ShrinkToFit = True ' Date

    
    ' loop over judges
    createJudgeSheets pairFile, listSheet, pairAffiliation, pairFile.Sheets(1)
    ' write protect evaluation sheet
    pairFile.Sheets(pairFile.Worksheets.Count).Range("A1:ZZ1000").Locked = True
    pairFile.Sheets(pairFile.Worksheets.Count).Protect "generated"
    
    'sheet finished, clean up, save, close, move on to next row
    pairFile.Sheets(1).Activate 'Next File Open shows Sheet 1
    pairFile.Save
    'print to pdf (standard printer)
    pairFile.PrintOut 1, pairFile.Sheets.Count - 1, 1, False
    
    pairFile.Close
    startNumber = startNumber + 1
  Next pairRow
End Sub
' This generates a sheet for each judge in a newly created pair file
Sub createJudgeSheets(pairFile As Workbook, listSheet As Worksheet, pairAffiliation As String, formTemplate As Worksheet)
  For judgeRow = 5 To listSheet.Cells(listSheet.Rows.Count, 11).End(xlUp).row ' Judge Rows start at row 5, valid rows are filled in column 11
    Dim judgePosition As String
    Dim newSheet As Worksheet
    Dim judgeDesignation As String
    
    judgePosition = listSheet.Cells(judgeRow, 10)
    judgeDesignation = listSheet.Cells(judgeRow, 11) & "(" & listSheet.Cells(judgeRow, 13) & ")" ' Designation consists of name, and affiliation in brackets
    
    'insert new copy of the template right in front of the template sheet and name it according to the judge position
    formTemplate.Copy Before:=formTemplate
    Set newSheet = pairFile.Worksheets(formTemplate.index - 1)
    newSheet.Name = judgePosition
    newSheet.Cells(5, 5) = judgeDesignation
    newSheet.Cells(37, 5) = judgePosition
    newSheet.Range("E5").ShrinkToFit = True ' Judge Designation
    newSheet.Range("F13").Activate 'Next File Open has Cursor in first checkbox
  Next judgeRow
  ' All judge-sheets created, delete master
  Application.DisplayAlerts = False
  formTemplate.Delete
  Application.DisplayAlerts = True
  ' set references in evaluation and Reorder for sit-out in case of same Affiliation
  setJudgeReferences pairFile
  ' Protect all judge sheets
  For judgeSheetIndex = 1 To pairFile.Sheets.Count - 1
    pairFile.Sheets(judgeSheetIndex).Range("A1:ZZ1000").Locked = True ' lock "everything"
    pairFile.Sheets(judgeSheetIndex).Range("F13:J29").Locked = False ' Unlock evaluation fields
    pairFile.Sheets(judgeSheetIndex).Range("K37:K37").Locked = False ' Unlock signature cell
    pairFile.Sheets(judgeSheetIndex).Protect "generated" ' set write protection
  Next judgeSheetIndex
End Sub
'This creates a copy of the "blanko" File and deletes all sheets that have nothing to do with the given kata
Function createFileForKata(templateFile As String, targetPath As String, kataSheetName As String, startingPosition As String, toriName As String, ukeName As String) As Workbook
    ' copy file & remove other kata blanks
    Dim fileName As String ' Filename for the evaluationSheets is: Pxx-kata-toriname-ukename.xlsm
    Dim kata As String
    Dim index As Integer
    index = InStr(1, kataSheetName, " ")
    
    kata = Mid(kataSheetName, index + 1)
    fileName = targetPath & "\" & kataSheetName & "\" & "P" & Format(startingPosition, "00") & "-" & kata & "-" & toriName & "-" & ukeName & ".xlsm"
    ' Copy code
    Dim choice As Integer
    choice = vbYes ' Default choice (if file does not exist) is "yes"
    If Dir(fileName) <> "" Then
      choice = MsgBox("File" & vbNewLine & fileName & vbNewLine & "Exists!" & vbNewLine & vbNewLine & "Overwrite?", vbYesNoCancel)
    End If
    Select Case choice
      Case vbYes
        fso.CopyFile templateFile, fileName, True ' Copy and overwrite
      Case vbNo
        Exit Function ' Abort Function
      Case vbCancel
        End ' Abort Macro
    End Select
    Dim newFile As Workbook
    Set newFile = Workbooks.Open(fileName)
    Application.DisplayAlerts = False
    For sheetIndex = newFile.Sheets.Count To 1 Step -1
      If InStr(newFile.Sheets(sheetIndex).Name, kataSheetName) <> 1 Then
        newFile.Sheets(sheetIndex).Delete
      End If
    Next sheetIndex
    Application.DisplayAlerts = True
    Set createFileForKata = newFile
End Function
' Configuration Parameter are kept in the list file. they need to be transferred to the Results file
Sub transferConfiguration(parameters As Range, resultFileName As String)
  'open results file
  Dim resultBook As Workbook
  Dim configSheet As Worksheet
  Set resultBook = Workbooks.Open(resultFileName)
  Set configSheet = resultBook.Sheets("Configuration")
  'write parameters
  parameters.Copy Destination:=configSheet.Range("A3")
  'save & close
  resultBook.Save
  resultBook.Close
End Sub
' this sets the references to the judge sheets in the evaluation sheet
Sub setJudgeReferences(pairFile As Workbook)
  ' First: Set all judge references, regardless of affiliation
  Dim evaluationSheet As Worksheet
  Set evaluationSheet = pairFile.Worksheets(pairFile.Worksheets.Count) ' the evaluation Sheet is the last one
  'set Supervisor name in Row 7
  evaluationSheet.Cells(7, 1) = pairFile.Worksheets(7).Name
  ' iterate over sheets 1 to  sheetcount - 1, set their names into the Table A8...A15 in the evaluation sheet
  For sheetIndex = 1 To pairFile.Sheets.Count - 1
    ' skip the 7
    If sheetIndex = 7 Then
    GoTo NextIteration
    End If
    evaluationSheet.Cells(sheetIndex + 7, 1) = pairFile.Worksheets(sheetIndex).Name
NextIteration:
  Next sheetIndex
  
  ' check affiliation: iterate over evaluationSheet A7..A11 (the 5 judges). If affiliation matches pair's affiliation - swap with A12
  Dim judgeAffiliation As String, pairAffiliation As String
  pairAffiliation = getAffiliationFromString(evaluationSheet.Cells(1, 2)) ' pair designation is on the evaluationsheet, in B5
  For judgeIndex = 8 To 12 ' row 8 to 12 are the original 5 judges, 13 is the stand-in
    Dim test As String
    test = evaluationSheet.Cells(judgeIndex, 2)
    judgeAffiliation = getAffiliationFromString(evaluationSheet.Cells(judgeIndex, 2))
    If judgeAffiliation = pairAffiliation Then
      'switch stand-in with current judge
      Dim intermediate As String
      intermediate = evaluationSheet.Cells(judgeIndex, 1)
      evaluationSheet.Cells(judgeIndex, 1) = evaluationSheet.Cells(13, 1) ' this is the stand-in
      evaluationSheet.Cells(13, 1) = intermediate
      ' Now we need to set the positions of stand-in and original judge
      pairFile.Worksheets(judgeIndex - 7).Cells(11, 5) = "Springer!"
      pairFile.Worksheets(6).Cells(11, 5) = intermediate & "!"
      ' this will swap the stand-in with the first conflicting judge. If ANOTHER judge conflicts, she will not be swapped out because we exit the for loop here
      Exit For
    End If
  Next judgeIndex
End Sub
' by convention, affiliations are put between Brackets "(" and ")" in designations. both brackets are unique
Function getAffiliationFromString(designation As String)
  Dim result As String
  Dim beginIndex As Integer, endIndex As Integer
  beginIndex = InStr(designation, "(")
  result = Right(designation, Len(designation) - beginIndex)
  endIndex = InStr(result, ")") - 1
  result = Left(result, endIndex)
  getAffiliationFromString = result
End Function
Function FolderCreate(ByVal path As String) As Boolean
  FolderCreate = True
  Dim fso As New FileSystemObject

  On Error GoTo FileSystemFailure
  fso.CreateFolder path ' could there be any error with this, like if the path is really screwed up?
  Exit Function

FileSystemFailure:
    MsgBox "A folder could not be created for the following path: " & path & ". Check the path name and try again."
    FolderCreate = False
    Exit Function

End Function

Function FolderExists(ByVal path As String) As Boolean
  FolderExists = False
  Dim fso As New FileSystemObject
  If fso.FolderExists(path) Then FolderExists = True
End Function
