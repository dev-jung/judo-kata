Attribute VB_Name = "ResultCollector"
' Declarations
Dim rootDirectory As String ' root Dir of DKM file strukture
Dim dataPath As String ' copy source and target
Dim filePrefix As String ' file name prefix for the pairing files
Dim competitionName As String ' Name of the competition
Dim importSheet As Worksheet ' Worksheet that contains the imported values

Sub Fetch()
  Dim resultSheet As Worksheet
  Dim targetPath As String
  Dim parameters As Range ' all configuration parameters
  Dim pairIndex As Integer
  Dim evaluationFile As Workbook
  
  Set resultSheet = ActiveSheet
  ' Config Parameters: Assumtion: We wont have more than 200 parameters
  Set parameters = Sheets(ThisWorkbook.Sheets.Count).Range("A3:B203")

  targetPath = ThisWorkbook.Path & "\" & Replace(parameters(1, 2), " ", "") & "\" & resultSheet.Name & "\" ' The target directory for the generated files of this kata

  ' cleanup import area
  resultSheet.Range("A5:AI200").ClearContents
  
  ' iterate over the pair files
  pairIndex = 0
  pairFile = Dir(targetPath & "*.xlsm")
  Do While pairFile <> ""
    ' open evaluation File
    Set evaluationFile = Workbooks.Open(Filename:=targetPath & pairFile) ' this is the file of the current pair
    Set pairSummarySheet = evaluationFile.Sheets(evaluationFile.Sheets.Count) ' this is the summary sheet of the pair
    
    Dim startnumber As String
    Dim placement As String
    Dim pair As String
    Dim rowOffset As Integer ' for each pair, a number of rows will be written (summary row, one row per judge); this is their counter
    
    ' Get start number
    startnumber = "P-" & evaluationFile.Sheets(1).Cells(5, 11).Value ' Start Number
    
    ' Get placement
    placement = FetchPlacement(ThisWorkbook.Path, startnumber, resultSheet.Name)
    
    ' Get pair name
    pair = evaluationFile.Sheets(1).Cells(8, 4).Value ' Toris Name
    pair = pair & "-" & evaluationFile.Sheets(1).Cells(9, 4).Value ' Ukes Name
    pair = pair & " (" & evaluationFile.Sheets(1).Cells(8, 11) & ")" ' affiliation

    ' Summary line:Overall score, final values of the techniques
    resultSheet.Cells(5 + pairIndex, 1) = placement
    resultSheet.Cells(5 + pairIndex, 2) = startnumber
    resultSheet.Cells(5 + pairIndex, 3) = pair
    resultSheet.Cells(5 + pairIndex, 6) = pairSummarySheet.Cells(3, 26).Value ' overall score
    For evalIndex = 3 To 24 ' technique scores
      resultSheet.Cells(5 + pairIndex, evalIndex + 5).Value = pairSummarySheet.Cells(3, evalIndex).Value
    Next evalIndex
    resultSheet.Cells(5 + pairIndex, 30).Value = pairSummarySheet.Cells(3, 25).Value ' closing
    'the five judges (one by one, the judges will be transposed); judges are rows 8 to 12
    resultSheet.Cells(5 + pairIndex, 31).Value = pairSummarySheet.Cells(8, 26).Value
    resultSheet.Cells(5 + pairIndex, 32).Value = pairSummarySheet.Cells(9, 26).Value
    resultSheet.Cells(5 + pairIndex, 33).Value = pairSummarySheet.Cells(10, 26).Value
    resultSheet.Cells(5 + pairIndex, 34).Value = pairSummarySheet.Cells(11, 26).Value
    resultSheet.Cells(5 + pairIndex, 35).Value = pairSummarySheet.Cells(12, 26).Value
    
    rowOffset = 1 ' the first row is written
    
    ' Iterate judges, judges are 8 to 12
    For judgeRow = 8 To 12
      ' Summary line:Overall score, final values of the techniques
      resultSheet.Cells(5 + pairIndex + rowOffset, 1).Value = placement
      resultSheet.Cells(5 + pairIndex + rowOffset, 2).Value = startnumber
      resultSheet.Cells(5 + pairIndex + rowOffset, 3).Value = pair
      resultSheet.Cells(5 + pairIndex + rowOffset, 4).Value = pairSummarySheet.Cells(judgeRow, 2) ' judge name
      For evalIndex = 3 To 24 ' technique scores
        resultSheet.Cells(5 + pairIndex + rowOffset, evalIndex + 5).Value = pairSummarySheet.Cells(judgeRow, evalIndex)
      Next evalIndex
      resultSheet.Cells(5 + pairIndex + rowOffset, 30).Value = pairSummarySheet.Cells(judgeRow, 25) ' closing
      For evalIndex = 26 To 31 ' this fetches overal, deviation, and mistake counts
        resultSheet.Cells(5 + pairIndex + rowOffset, evalIndex + 10).Value = pairSummarySheet.Cells(judgeRow, evalIndex)
      Next evalIndex
      rowOffset = rowOffset + 1
    Next judgeRow
        
    pairIndex = pairIndex + rowOffset ' it will be the next pair, but rowOffset rows have been written
    pairFile = Dir
    evaluationFile.Close SaveChanges:=False
  Loop
End Sub


Function FetchPlacement(rootPath As String, pairNumber As String, kataName As String) As String
  FetchPlacement = "foo"
  Dim resultTable As Workbook
  Dim kataResult As Worksheet
  'open Results List
  Set resultTable = Workbooks.Open(Filename:=rootPath & "\" & "Results.xlsm")
  ' look for kata page
  Set kataResult = resultTable.Sheets(kataName)
  'iterate over table entries
  For pairRow = 5 To kataResult.Cells(kataResult.Rows.Count, 1).End(xlUp).Row ' Results start at row 5, valid rows are filled in column 1
    'look for pairNumber, extract placement; break loop
    If kataResult.Cells(pairRow, 2).Value = pairNumber Then
      FetchPlacement = kataResult.Cells(pairRow, 1).Value
      Exit For
    End If
  Next pairRow
  resultTable.Close SaveChanges:=False
End Function
